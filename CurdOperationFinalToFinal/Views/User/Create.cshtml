@model CurdOperationFinalToFinal.Models.UserVM.UserVM;

@{
    ViewData["Title"] = "Create User";
    var errorMessage = TempData["errorMessage"]?.ToString();
}

<h3>@ViewData["Title"]?.ToString()</h3>
<link href="~/css/form.css" rel="stylesheet" />

@if (!string.IsNullOrWhiteSpace(errorMessage))
{
    <div class="alert alert-danger">
        <b>Error: </b>@errorMessage
        <button type="button" class="btn-close float-end" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@using (Html.BeginForm("Create", "User", FormMethod.Post, new { @class = "row g-3" }))
{
    <div class="box">
        <div class="d-flex flex-row">
            <div class="p-2">
                @Html.LabelFor(model => model.userData.firstName, "First Name")
                @Html.TextBoxFor(model => model.userData.firstName, new { @class = "form-control", required = "required" })
            </div>
            <div class="p-2">
                @Html.LabelFor(model => model.userData.lastName, "Last Name")
                @Html.TextBoxFor(model => model.userData.lastName, new { @class = "form-control", required = "required" })
            </div>
            <div class="p-2">
                @Html.LabelFor(model => model.userData.dob, "Birth Date")
                @Html.TextBoxFor(model => model.userData.dob, new { @class = "form-control", type = "date", required = "required" })
                <span class="text-danger"></span>
            </div>
            <div class="p-2">
                @Html.LabelFor(model => model.userData.phoneNumber, "Contact Number")
                @Html.TextBoxFor(model => model.userData.phoneNumber, new { @class = "form-control", required = "required", maxlength = "10" })
            </div>
        </div>
        <div class="d-flex flex-row">
            <div class="p-2">
                @Html.LabelFor(model => model.userData.Email, "Email Address")
                @Html.TextBoxFor(model => model.userData.Email, new { @class = "form-control", required = "required" })
            </div>
            <div class="p-2" style="margin-top: 10px; margin-left: 38px;">
                @Html.LabelFor(model => model.userData.isActive, "Is Active?")
                <br />
                @Html.CheckBoxFor(model => model.userData.isActive, new { @class = "form-check-input" })
            </div>
            <div style="margin-top: 18px; margin-left: 38px;">
                <label>Gender</label>
                <div class="d-flex flex-row">
                    <div class="p-2">
                        @Html.RadioButtonFor(model => model.userData.Gender, "1", new { @class = "form-check-input", required = "required" })
                        <label class="form-check-label" for="inlineRadio1">Male</label>
                    </div>
                    <div class="p-2">
                        @Html.RadioButtonFor(model => model.userData.Gender, "2", new { @class = "form-check-input", required = "required" })
                        <label class="form-check-label" for="inlineRadio2">Female</label>
                    </div>
                    <div class="p-2">
                        @Html.RadioButtonFor(model => model.userData.Gender, "3", new { @class = "form-check-input", required = "required" })
                        <label class="form-check-label" for="inlineRadio3">Other</label>
                    </div>
                </div>
            </div>
        </div>
        <div>
            <button type="submit" class="btn btn-primary">Submit</button>
            @Html.ActionLink("Cancel", "Index", "User", null, new { @class = "btn btn-danger" })
        </div>
    <table id="address-table" class="table">
        <thead>
            <tr>
                <th>Address Line</th>
                <th>City</th>
                <th>Country</th>
                <th>State</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            
        </tbody>
    </table>
    </div>


    <button type="submit" id="add-row" class="">Add</button>
}

@section Scripts{
    <script>
        $(document).ready(function () {
            // Country dropdown change event
            $('#CountryId').change(function () {
                var countryId = $(this).val();

                // Make AJAX request to fetch states
                $.ajax({
                    url: '@Url.Action("GetStatesByCountry", "User")',
                    type: 'GET',
                    data: { countryId: countryId },
                    success: function (result) {
                        // Clear existing options
                        $('#StateId').empty();

                        // Add new options based on the retrieved states
                        $.each(result, function (index, state) {
                            debugger
                            $('#StateId').append($('<option></option>').val(state.id).text(state.name));
                        });
                    }
                });
            });

            // Regular expression for phone number validation
            var phoneNumberPattern = /^\d{10}$/;

            // Get the phone number input field
            var phoneNumberInput = $('#phoneNumber');

            // Add an event listener to the input field for validation
            phoneNumberInput.on('input', function () {
                var phoneNumber = phoneNumberInput.val();

                // Validate the phone number using the regular expression
                if (phoneNumberPattern.test(phoneNumber)) {
                    // Valid phone number
                    phoneNumberInput[0].setCustomValidity('');
                } else {
                    // Invalid phone number
                    phoneNumberInput[0].setCustomValidity('Please enter a valid phone number.');
                }
            });

            // Handle add row button click
            $('#add-row').click(function () {
                $.ajax({
                    url: '@Url.Action("AddAddressRow", "User")',
                    type: 'GET',
                    success: function (result) {
                        var newRow = $(result);
                        newRow.find(':input').each(function () {
                            $(this).val('');
                        });
                        newRow.find('.text-danger').text('');
                        $('#address-table tbody').append(newRow);
                    }
                });
            });
        });
    </script>
}
